// Code generated by go-bindata.
// sources:
// cloud.json
// DO NOT EDIT!

package azure

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cloudJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9d\x5d\x73\xdb\xb6\xb6\x86\xef\xf3\x2b\x38\xba\xb6\x7d\x2c\xea\xc3\x6c\xee\x1c\xdb\x71\x7c\xd2\xe3\xf4\x44\x4e\x3a\x7b\xef\xe9\x78\x18\x89\x71\x58\xcb\xa4\x4a\x52\x4e\x93\x4e\xfe\xfb\x1e\x4a\xb2\x2c\xe2\x43\x7c\x41\x8b\x02\xe5\xbc\x37\x6d\x86\x5c\x16\x08\xac\x07\x6b\x2d\x00\x0b\xc0\x3f\x2f\x1c\xa7\x15\xf9\x77\x41\xeb\xa5\xd3\xf2\xbf\x4f\x93\xa0\xb5\x97\x3f\x0a\xa2\xfb\xb4\xf5\xd2\xf9\xcf\x0b\xc7\x71\x9c\xd6\x28\xb8\x9f\x3d\x76\x9c\xd6\x5f\xfe\xc3\xbf\x26\x49\x3c\x6a\xbd\x70\x9c\x3f\x66\x7f\x90\x04\x37\x61\x1c\x3d\xfe\xcd\x3f\xb3\xff\x3a\x4e\x6b\x1c\x0f\xfd\x2c\x8c\xa3\xbc\x80\xcb\xe0\xab\x33\x88\xa7\xd9\x17\xe7\x77\x7f\x1c\xa4\x8b\x5f\x5a\xfe\x75\x2e\x72\x3c\x4d\xb3\xc4\x1f\x87\xbe\x73\xe6\xa7\xd9\xa3\xc4\xf7\x38\x0a\x1e\x7f\x7d\xf6\xc8\x7f\x10\x0d\x72\xc9\xc5\xf3\x3f\x66\xff\xff\xb1\xa7\xff\x88\x8f\xe1\x30\x8b\x93\xd0\x5f\x5f\xfa\xec\x33\x03\xf8\x13\xd2\xa5\x38\xfc\x1d\x03\x3f\x76\x7e\xf3\xa7\xe3\xd8\x19\x64\x7e\x16\xa8\x3e\xe7\x55\xe2\x7f\x0f\xc7\xf3\x6f\x59\xfb\x1d\x9f\x66\x82\xb3\x8f\xc0\x3f\xe0\x2a\x4e\xe2\x28\x8b\x55\x05\x9f\xf8\x91\x3f\xf2\x9d\x93\x20\xca\xab\xb7\xb6\xe8\xe1\x4c\x74\xb8\x90\x84\x0b\xff\xff\x69\xf0\x29\x18\x3a\x27\x61\xf6\x6d\xcd\x07\x94\x32\x30\x2f\xdd\xac\xe1\x95\xe5\xcd\xbf\xdf\xb9\x88\x46\xab\x64\xa8\x4a\x9c\x4b\x86\x33\x41\xb8\xcc\x8b\xf8\xab\x12\xb8\x87\x72\x3f\x0c\x90\x42\xa7\x29\x5e\xe2\x9b\x38\xba\x71\xde\xc6\xd1\x8d\xaa\xd8\xbc\x5d\x9d\xe3\xb4\xa4\xaa\x79\xb3\xfa\xa9\x49\x35\x3f\x86\xc9\x4d\x18\xa9\xfb\xd6\xac\xcc\x92\x7a\xe6\x25\x9a\x54\x12\x28\xcf\x71\x81\x12\x5d\x93\x5e\x73\xfb\x2d\xde\x73\x06\x7e\x98\xf9\x77\xca\x82\xff\xd7\x9f\xf8\x51\x39\xba\x7f\xe6\x62\x66\xe4\xbe\x4b\xfd\xdb\x35\x45\xfe\x1e\x20\x45\x7e\x0d\x9e\xda\x59\xde\xc6\x49\x80\x19\x87\xdb\x5c\xd2\xd8\x36\xe8\xcb\x2c\xb7\x84\xb3\x12\x0d\x0d\xe1\xc5\x78\x1c\x46\x71\xa8\xf4\x47\x97\x71\x92\x7d\x71\xc0\x6e\x1a\xe5\xc2\x15\xfa\xea\x45\x12\x8c\xfd\x68\xa4\x2f\xff\x6c\x9a\xc4\x93\xa0\xbc\xec\x60\x2e\x87\xc3\x1c\xfc\xed\x2b\xab\x3d\xf7\xd2\x60\xb5\x67\xcd\x5d\xa1\xda\xfa\x82\xcb\xcd\xf0\xac\x4c\x43\x23\x3c\x08\xa3\x1b\x7f\x12\x27\x4a\x5f\xbb\x74\xf8\xe5\x76\x71\xe9\xec\xcd\x8c\xe3\xaf\x71\x34\x8a\x23\x55\xd9\x1f\xde\x02\x64\x4f\x6f\x0d\xb1\x3e\xf1\x93\x51\xf8\xf9\xb3\xa6\xc0\x52\x63\x31\xbd\x35\xb3\x14\xf9\x0f\x2a\x89\x79\x2c\x56\x2b\xa2\x28\x3e\x2f\xbc\x02\x53\x97\x41\xf6\x25\x48\xf2\xde\xa4\xe4\x7a\xf6\x05\x40\x6f\xca\x4b\x37\xed\x4c\xda\xf2\xca\x69\xce\x8b\x33\x84\xf9\xc4\x1f\x87\x9f\xe3\x44\xe3\xfc\x66\xe5\x02\x2d\x6c\xd2\xb4\x8b\xdf\x5c\x75\xa8\x52\x81\x25\xde\x76\x5e\xa4\xe8\x6d\x97\x83\x88\x30\x4a\x33\x3f\x1a\x06\x57\xdf\x26\x81\x62\x28\x91\xde\x4e\x67\x51\xb1\x9f\x86\xc3\xeb\xe3\xc3\xc7\x92\x46\x41\x3a\x4c\xc2\xc9\xc3\x87\xca\x02\xc3\x49\xfe\x97\xed\xc7\xef\xf6\xef\x5a\x2f\x9d\xc3\x83\xa3\xde\xe3\x6f\x84\xe9\x6d\xeb\xa5\xe3\x1e\xe2\x43\x8e\x3d\xc5\x8b\x54\x1a\x37\x08\xe1\xf9\xca\xe3\x62\xe8\x2c\xbd\x10\x7f\xa5\x10\x79\xca\xcf\xa7\xe9\xea\xc3\xa5\x79\x12\x9e\xc9\x52\xb9\x3e\xf6\x54\x61\x89\xf8\xf0\x6b\x50\x7c\x58\x70\xee\xe2\x73\xa9\xb2\x82\x6f\x14\xdf\x04\xc5\x3e\x29\x7b\x15\xf1\x8d\xaa\x82\x2b\x4e\x61\x4f\x36\x9c\x7b\x92\x6d\xdb\xd3\x99\x9b\x3d\xa5\x25\xd8\x53\x75\xd8\x3d\xa9\x43\x49\x4f\x4a\xa2\xcb\x22\xd6\xed\x32\xac\xdb\x65\x58\xb7\x15\x58\x77\x89\x35\xb1\xb6\x89\xb5\x5b\x86\xb5\x2b\x62\xed\x0a\x58\x77\x0e\x24\xaa\xfb\xa4\x9a\x54\xdb\xa4\xba\x53\x46\x75\x47\xa4\xba\x2b\x50\x7d\x24\x32\xdd\x66\x04\x42\xa8\xad\x42\xdd\x2d\x83\xba\x2b\x42\xed\x89\x11\x48\x57\x0a\xab\x19\x80\x90\x6a\x3b\x54\x0f\x32\x3f\x1a\xf9\xc9\x68\xdd\x88\x51\x29\x33\xf4\xb3\xe0\x26\x4e\xbe\xcd\x16\x86\xf6\xd3\x20\x09\x57\x97\xac\x38\xa4\x24\xfa\xbb\x83\xbe\x7e\x54\xa9\x94\xa9\x82\xbe\x6a\xd8\x79\x44\xf4\x89\xbe\x6d\xf4\x11\xb3\xdf\x2e\xb1\xfb\xce\xbe\x33\x8c\xef\x26\xd3\x2c\xd8\x0f\xa3\x2c\x88\xd2\xf0\x3e\x70\x1e\xa6\x2b\xa5\xae\x21\xc6\x43\xbd\xbe\xd8\x31\x3a\x9e\xbb\xae\x67\xc8\x6c\x29\x41\xda\x20\x05\x7a\xc5\x94\x4d\x11\xcb\x0d\x0e\x19\x9b\x12\x6b\x63\xd6\xe0\xed\xbe\x68\x8c\xda\xee\x4f\xd5\xe4\xd7\xf7\xfa\x09\x16\x9d\x98\xda\x8c\x4b\xed\xd6\xa6\x0d\xa7\x0d\xb7\x6c\xc3\x11\xb8\x5d\xb3\xf0\x05\x98\x5e\x6c\x77\x7a\x44\x9f\xe8\x5b\x46\x1f\x33\xed\xae\xc2\xb4\x8b\x88\xcb\xb3\x32\x34\xed\xe4\xdb\x36\xdf\x77\x20\xe0\x77\x00\xe1\x6d\x29\xd0\x26\xe2\x44\xdc\x36\xe2\xfa\x55\x22\xa5\x0c\x12\xbd\x94\x2e\x23\xb9\x1e\x63\x17\x82\x6f\x19\x7c\xfd\x4a\x92\x52\x06\x01\xbf\x7c\xa9\xa9\x7f\x48\xf2\x49\xbe\x6d\xf2\xb1\xa0\xa6\xab\x88\x69\x44\xd3\xee\x89\x80\x73\x29\x95\x7c\x5b\xe7\x1b\x8c\xda\xbb\xaa\xa8\x5d\x24\xbc\x23\xcd\x39\x12\x71\x22\x6e\x1b\xf1\x1e\x80\x77\xcf\x2c\x78\x91\x86\xab\x52\xf0\xc2\x29\x47\x92\x6f\x9d\xfc\x3e\x40\x7e\xdf\x8c\x7c\xd1\xe4\xbb\x52\x54\xc3\x01\x2b\xc9\xb7\x4e\xfe\x11\x40\xfe\x91\x19\xf9\xe5\xb9\x00\x1c\xb0\x92\x7c\xeb\xe4\x7b\x00\xf9\xde\x7a\xf2\x99\x23\x63\xd0\xdc\xd8\xf0\xc9\x53\x8c\x9e\xa4\x19\x30\xa9\xe1\x3c\x8e\x9e\x68\x4f\x6c\xdb\x13\x70\x82\xc0\x53\x4d\x10\x88\x88\xf7\xa5\x71\x12\x11\x27\xe2\xb6\x11\xff\x05\xc0\xfb\x97\x4d\xba\xcc\x9f\x3c\xcb\xf1\x55\xfb\x2e\x2d\x6f\xf2\xa2\x14\x98\xe3\xd8\xa5\x35\xa1\x35\x41\xa1\x7d\xaa\xe1\x78\xd5\x86\x30\x2e\xdf\x70\x21\x52\xbc\xb6\xe7\x93\x62\x52\xec\x6c\x92\x62\x17\xb2\xc6\xae\x6c\x8d\xc5\x59\x70\x69\x2a\x70\xc5\xcf\x11\xe4\xe2\x43\x82\x5c\x03\xc8\x10\xc7\xa5\x18\xcb\x63\x14\x52\x4c\x8a\xb7\x46\x71\x17\x32\xc7\x5d\xd9\x1c\x8b\x4b\x33\xf2\x7c\x52\x87\x81\x05\x49\xde\x1e\xc9\x1e\x44\xb2\x27\x93\x2c\x4e\x1b\xc9\x79\x25\x7d\x0e\xf4\x48\xf2\xd6\x48\x3e\x05\x36\xc2\x9e\x6a\xf6\xc1\x9e\x82\xbb\xee\x15\xdb\xd6\x7a\xdb\x9c\x1b\xb5\x44\xe7\x36\x78\xdb\xdc\xcc\xd5\x29\xb2\x25\xfa\x54\xb7\x25\x5a\x87\x02\x90\x4d\x74\x48\x14\x9a\x87\x02\xb4\x30\x22\xca\x15\x80\xb8\x77\x77\x04\x09\xba\xc0\x5d\x76\x81\x75\xad\x9c\xcc\xd9\xbe\xfe\x2d\x89\xef\x62\xb4\x27\x88\xd2\xe4\x9d\xbc\xef\x0e\xef\x90\xc1\xd7\x59\xfb\xea\x29\x95\x74\xff\xcd\x73\xff\xd8\x7e\x7e\x51\x0e\x73\xff\x4d\x43\x82\xe6\x90\xe6\x50\xd7\x07\x70\xf7\xaf\x92\x26\xef\xe4\x7d\x77\x78\x07\x0e\x00\x28\x08\x21\xee\xbf\x3c\x7f\xb6\x4b\xf7\xdf\x3c\xf7\xdf\x01\xdd\x7f\xa7\x82\xfb\x6f\x1a\x12\x34\x87\x34\x87\xba\x3e\x80\xbb\x7f\x95\x34\x79\x27\xef\xbb\xc3\x3b\x70\x0c\x4a\x41\x08\x5a\x07\x02\x72\x81\x3d\x06\x00\xcd\x0b\x00\xb0\x93\x41\x44\x39\x2c\x00\x68\x1e\x14\x34\x89\x34\x89\xba\x5e\x80\x87\x00\x2a\x69\x12\xef\x90\xf8\x1d\x22\xbe\x07\xda\xfd\x5e\x95\x65\xdf\x43\xb1\x17\xac\x1c\xa0\xb3\x3c\x5f\x81\xbd\x80\xbd\xc0\x76\x2f\xe8\x5f\xdf\x43\x93\x61\x45\x39\x8d\xad\xef\x77\x0f\xa4\x3d\x30\x1c\xf1\x11\xf3\xad\xa6\xf8\xf5\x53\x14\xe9\x14\x63\x5a\x24\xba\xed\x72\x23\x01\x89\xde\x22\xd1\x60\xa0\x52\x65\x7c\x2a\xc0\x6e\x3b\x79\x95\xb0\xef\x32\xec\xb5\x45\x29\x08\xfe\x86\xc9\x3a\x62\xa2\x9a\x7c\xed\x2b\xe7\xea\x1a\x37\x57\x07\xa6\xea\x54\xc9\xd4\x69\x18\x0f\x34\x84\x34\x84\x9a\x0e\x00\xcf\xd2\xe9\xd3\x74\x08\x3b\x61\xdf\x09\xd8\x91\x71\x9c\xab\x18\xc5\x95\x9e\x68\xc0\xa8\x96\x7c\x6f\x71\x08\xe7\x82\x73\x12\xae\x6a\x4a\x82\xc7\x73\x10\xe6\x26\xc1\x8c\x80\x6c\x98\x3b\x29\x1d\x79\xa0\xb8\x19\x8f\xc3\xb1\xa6\x0d\xc7\x3a\xa0\x87\xee\xa8\x5c\x74\x47\xda\x2a\x26\x27\x8b\x73\xa1\x98\x96\x6d\xab\x96\x0d\xf5\xd3\xa2\x20\x8e\xb4\xdb\xa3\xb3\x26\xd2\x5b\x44\x1a\x9b\x32\xab\x92\xdd\xde\x34\xa7\x4d\xd8\x77\x19\xf6\xda\xa6\x11\x8c\x92\xdb\xf5\xb9\xed\xa4\x9d\xb4\x3b\xcd\xa7\x1d\x49\x6d\x37\xcc\x6c\x17\x77\x75\xc8\x41\x0d\x37\xb6\x35\x6f\x70\x06\xa6\xb5\x57\xc9\x6a\x6f\x1a\x10\x34\x85\x34\x85\x9a\x1e\x00\x3b\x7e\x7d\x46\x3b\x69\x27\xed\xce\x4e\xd0\x8e\xcc\x5c\x74\x15\xf3\x16\xe5\x07\xce\x72\x3d\x98\x84\x6f\x73\xd6\xa2\x0b\xce\xc3\x75\x55\xd3\x70\x3c\x3f\x99\x34\x37\x8a\x66\x70\xa7\x51\x95\x8d\x46\x52\xba\xba\xbc\xe5\x9e\x8b\x28\xa4\xdd\x7a\x74\xd2\x33\x89\xc5\x55\xc2\xc4\x9d\xb8\xef\x0e\xee\x7d\x30\x1a\xef\xab\xc2\xf1\xbe\x74\x8a\x9a\x4c\x79\xbb\x4f\xcc\x7f\x5e\xcc\xeb\x0b\x55\xfa\x68\xe4\x2d\x0a\xe2\xe8\xf6\xda\x8c\xbe\x49\x6e\xe1\xe9\x26\xc8\xf5\x30\x6e\x3d\x05\xb5\xe5\xd7\x94\x70\x69\xef\x27\x66\xd6\xc2\x88\xd1\x03\xad\xb0\xa7\x32\xc2\xbc\x75\x87\x34\x37\x8a\xe6\x01\x72\xd9\xca\x40\x77\xd9\xca\xa0\xfa\xde\xe5\xa3\x1a\x30\xb7\xba\xfc\xdc\xb4\x45\xe6\x01\x74\x8f\xce\x40\x7b\x91\x8e\x4e\xb7\xe5\xd7\x48\xd4\x72\x06\x03\x75\x5b\xd4\x1a\x36\x6f\x29\x0a\x16\x35\xfc\x84\xab\x71\x78\xce\x06\xdd\x94\xed\x99\x9c\x81\xd9\xd5\x38\x6a\x71\x02\x4f\xe0\x77\x07\x78\xcc\xe6\x6b\x0d\x7e\xe5\xab\x50\x6a\xd9\x19\x41\x97\x5e\xd4\x1a\xea\xd2\xd7\x9c\xa1\xa1\x77\xe9\x96\x74\x4c\x0b\x47\x0b\xe7\x98\xf6\x02\x03\x97\xfe\x94\xfb\x6e\x08\x3c\x81\xb7\x0f\x3c\x32\x97\x38\xd0\x5e\x78\xa3\x73\xe9\xe5\xd7\x3d\xb4\x6b\x59\xeb\xa1\x4f\x2f\xaa\x6d\x1f\xf6\xea\xa2\xa8\x5d\x3d\xd2\x8c\xd1\x8c\x39\x66\xa4\x83\xbb\x5a\x64\x51\x92\x4e\xd2\x77\x89\x74\x98\xf3\x2a\xe3\x34\x76\x03\x76\x03\x67\x57\xba\x81\xc1\x40\xed\x29\x37\x93\x91\x78\x12\xdf\x00\xe2\x91\xfd\xdb\x03\xed\xdd\x64\xda\xb5\x72\xe0\x56\x1e\xd7\xad\x23\x2b\x84\x63\xb5\xa2\xe2\xf0\x08\x56\x14\xb5\xad\x49\x9a\x32\x9a\x32\xc7\x8c\x75\x0f\x67\xdd\x23\xeb\x64\x7d\xf1\x74\x17\x59\x87\x49\xaf\x32\x5e\x63\x47\x60\x47\x58\x3e\x6a\x7e\x47\x30\x18\xb1\x3d\xed\x22\x49\x32\x4f\xe6\x1b\xc0\x3c\xb8\xbf\x5b\x14\x44\xf3\x24\x79\x97\x24\x3b\xc2\xc3\xa3\x66\x77\x04\xb4\x1f\x54\x8a\x81\x84\x5e\xb0\xa5\x74\x7f\xf6\x01\xf6\x01\xc7\xa0\x0f\x40\x1d\xc0\x34\x77\xb2\xfc\xbe\x1e\x4e\xdd\xd5\x3d\x75\x87\xe6\x58\x54\x4a\x9c\xb4\xa3\x60\xda\x36\xda\x36\xc7\xb0\x0b\xe0\x63\xbb\xa7\x5c\x3f\x46\xda\x49\xbb\x6d\xda\xa1\x9c\x49\xd3\x94\x49\xe0\x14\x71\x6e\x6c\xac\xdb\x95\xa3\xc9\x35\x95\x72\x6b\x2c\x69\x98\xd6\x8d\xd6\xcd\x31\xec\x03\xb8\x2f\x7f\xd2\xb5\x08\xc4\x9d\xb8\xdb\xc6\x1d\x4a\xab\x31\xcd\xaa\x29\x3f\x19\x9c\x5b\x1a\x6b\x77\xe6\xe8\xca\x6b\xa5\x85\x57\x4b\x1a\xa6\x75\xa3\x75\x73\x0c\xfb\x00\xee\xcc\x9f\x72\xd5\x01\x71\x27\xee\xd6\x71\x47\xd7\x5b\x2b\x2d\xb7\x02\x47\x0c\x33\x55\x9c\xbd\xa0\x19\xbd\x00\x37\xfa\x4f\x3a\x53\x9b\xc0\x13\x78\xdb\xc0\x9f\xb5\xfb\xd0\x99\x98\xa2\x9c\x2e\x9b\x8c\xd7\x38\x91\xf2\xc5\x93\xb5\xc3\xd1\x0d\x70\x8b\x1d\xe6\x2a\x09\xe2\xe4\xf2\x52\x69\x92\x5b\x03\xb9\xd8\xf5\xfe\x67\xaa\xdb\xfd\xa5\xb3\xee\xe4\x63\xe0\x69\x6c\x89\x6c\xe1\xe9\x46\x90\x05\x6d\xad\xf2\xfe\xfe\x72\x68\x79\x71\x18\xa1\xdd\x3c\xb4\x1d\x77\x1f\x0e\x12\x14\xb2\x73\x78\x3b\x22\xbd\xbc\x7a\x83\xfc\x3e\x3c\xa9\x9d\x5f\xf0\xc2\x02\x85\x28\xe9\x75\x48\xaf\x5d\x7a\x51\x74\x2b\x72\xcb\x1b\xe9\xc8\x6d\x2d\xdc\xc2\x36\x97\x16\x97\xe4\x3e\x3c\x6d\x00\xb9\xd8\xe5\x88\x67\xc8\x55\xe5\xf2\xdd\x46\xbc\xaa\x9c\xcc\xd6\xc1\x2c\x68\x6c\xa1\x1b\xc9\x79\x23\x17\xa1\x9d\x3f\xa9\x17\xda\x7e\x17\x9f\x58\x50\xc8\x6a\xee\xf4\xec\xca\xf8\x7a\xe4\x97\xfc\xd6\xc2\x2f\x1c\xe5\x2a\x64\xc9\xaf\x43\x7e\xed\xf2\x8b\xb2\x5b\x91\x5b\x5e\x03\x4e\x70\xeb\x01\x17\xb6\xba\x34\xb9\x24\xf7\xe1\x69\x03\xc8\xc5\xae\x01\x3f\x43\xae\x01\xef\xcb\x5b\xd9\x68\x6d\xc9\x6c\x0d\xcc\x82\xc6\x16\xba\xed\x5b\xa6\xb6\xcd\x1d\x98\xa4\x76\xe3\xd4\xbe\x06\x6e\x7e\x7e\xad\xb9\xf7\xf9\x35\x78\xc6\x97\x22\xde\x25\xc9\x3f\x2b\xc9\x0d\xc9\x43\x7f\xdd\xee\x23\xe0\xf7\x0d\xc9\x17\xb3\x7c\xe5\x80\x99\x49\xbe\x84\xbf\x01\xf0\xa7\x10\xfd\xa9\x06\xff\xb4\x3a\xff\x1c\x2f\x12\xff\x06\xe0\x0f\xed\x3d\x95\x04\x61\xca\x4b\x82\x75\x19\x14\x6d\x93\xaf\x8b\xfe\x8c\xeb\x0d\xf5\x7a\xe3\x4e\x5f\x16\xee\xb1\xc7\xb3\xc7\x5b\xee\xf1\x48\x67\xd7\x6c\x32\xd7\xc5\x7a\x62\xe2\x95\x34\x60\xe7\x2e\x03\x72\x6f\x9d\x7b\xc4\xe2\xbb\xa6\x16\xbf\x14\x7d\xce\x54\x91\x7c\xeb\xe4\x63\x21\x9e\xab\x8a\xf0\x4a\x01\x5f\x3f\x83\x65\x29\xbc\xeb\xa0\x75\x16\x05\x35\xa9\xc4\x8a\x95\x93\xf5\x93\x17\x96\xea\x0d\x9c\x0a\xf7\x5a\x73\x28\x9c\xce\xb9\x8b\x2b\x9f\xd2\x5e\x6d\x0e\x63\x69\xe2\x6c\x9b\xb8\x2e\xe2\xdc\xbb\xa6\xce\xbd\x14\x7d\xce\xde\x13\x7d\xfb\xe8\x63\x9e\xae\xab\x72\x74\xa5\x84\xaf\x1f\xb9\x59\xf2\x72\x7d\xb4\xce\xa2\xa0\x26\x99\x47\x71\x00\x49\xc9\x46\x21\x4b\x15\x3f\x42\xc3\x1a\x51\x70\x5e\xf1\x23\xe9\x3c\x80\xae\x14\xd7\xf4\x8e\x9a\x18\xd7\x78\x40\x9d\x3d\xb3\xb8\x46\x4c\x33\x90\xcf\x46\x60\x9a\x01\xcd\xbb\x75\xf3\xee\x21\x91\x8d\x67\x1a\xd9\x94\xc3\xcf\x29\x3b\xb2\x6f\x9f\x7d\xcc\xdb\x79\x2a\x67\x57\x8e\xf8\xfa\x81\xab\x1d\x4f\x77\x0e\x24\x21\x9d\x6b\x92\x90\xce\xc1\x39\x4a\x39\xda\xe9\x78\xd5\xc6\xf0\x86\x1d\x17\xed\x65\xda\x86\x56\x10\x5c\x6b\x4a\xd8\x39\x40\xdf\xb9\x66\xb1\x44\xa7\x0d\x31\xf8\x94\x37\xa9\x1f\xf5\xab\xc5\x1d\xcf\x5e\x1b\x40\x4a\xe9\xb9\xe6\xfe\x22\x9d\x36\x24\x2b\x21\xdf\xc9\xdc\xee\x75\xaa\x0d\xf3\x9f\xbd\x3e\x80\xd9\xc6\x73\xcd\x6c\xa3\x4e\x1f\x52\x42\xc1\xea\x8d\xd8\x0f\xd6\xea\xf0\xa8\x5a\x70\xf2\xec\x15\xd2\x03\x14\xd2\x33\x53\x88\x34\x15\xde\xed\xca\x33\xc0\xab\xe3\x48\x2a\x64\xa5\xb1\x07\x88\x3b\x1f\xe8\xfc\x39\x7a\x7b\xea\xc6\x6e\x35\x78\xfe\xfa\x40\x1c\xba\xee\x36\x5b\xad\x3e\xca\x5d\x7a\xd5\xf3\xc6\x9f\xbf\x42\x10\x9f\xae\xbb\x94\x50\xab\x10\xc0\xab\xaf\xfa\x15\x6a\x64\xb5\xb1\x11\xaf\xae\xbb\x59\x4a\xab\x11\xc4\xaf\xaf\x7a\x16\xaa\xa4\xd0\xda\xfb\x98\x52\x56\xc5\xd8\xee\x9b\x68\x77\x60\xe2\x59\x10\x63\xbb\x3f\xbd\xdd\x91\x38\x76\xa0\x0b\x64\x75\x26\x08\x89\x64\xbd\x5f\x18\x38\x69\x54\xb2\x8f\x6c\x13\x12\xe5\xd8\xf2\x9b\x68\x79\xc8\x08\xf5\x64\x23\xc4\x76\xaf\xde\xee\x6f\x10\xdc\xdf\xc8\xac\xcb\xb7\x5b\x28\x62\xcf\xc3\x8a\xdb\xee\x75\x2b\x1f\xf2\x5c\xb5\xb2\x71\xb7\xb1\xf4\x60\x41\x4f\x77\x90\xa2\xee\xaa\xb8\x68\x6a\x6a\xb3\x9a\x4a\x30\x55\x25\xd4\x95\x75\x5d\x61\xaa\x2a\xd7\x14\xed\x5f\xbd\x9a\x02\x82\x83\x37\x52\x64\x20\x4e\x90\x28\x66\xac\xa8\xa3\x0d\xea\x08\x71\x51\x9e\xe4\xa1\x90\xc5\x29\xaa\x69\x63\x6a\xfa\x15\xda\x0b\x5e\x94\x32\xb8\xd2\xcc\x3b\x3c\x62\xa4\xad\x6a\xf6\x0e\xb2\x35\xab\x28\x65\x70\xe2\x7b\xbf\x53\xb1\x83\x3c\xf7\x66\x47\x72\xe6\x0b\x42\xf0\xd1\xcf\x47\x9c\xd7\x52\xb6\x38\x92\xcb\x57\x10\x82\x0f\xc4\xea\x78\x6c\x72\x55\x93\xff\x5f\xdb\xf5\xf6\x3b\xee\x1d\xd0\xf0\x0a\xd1\x85\x71\x77\x45\x05\x74\x56\x2f\x40\x79\xbc\x6b\x75\xad\x9d\x51\x34\x9d\x61\x63\x54\xa9\x7a\xbf\x0b\x57\xbd\x28\xba\xf3\x55\x47\xeb\xfd\xac\x2a\x0d\xd6\x19\xa8\x72\x61\x88\xd6\xd8\x2a\xcf\x8e\x78\x87\x34\x2d\x49\xea\xb6\x82\x1c\xf5\xa4\x7a\x97\x0d\x57\xad\xd4\x1b\x34\x6a\x92\xe4\x8e\xd7\x1b\xac\xf4\x33\xaa\x31\x56\x61\xa0\xbe\x8a\x1e\xdd\xb8\xfa\x5e\x9e\xb4\x81\x0c\x9d\xa2\xd4\x83\x09\x13\xeb\x2b\x0f\x96\xfb\x5e\xb5\xa1\x80\x3c\x26\x56\x34\xcc\x06\x47\xc4\xf5\xb7\x31\x96\x58\x2f\x4b\x6a\xda\x5a\x31\x1b\xdb\x5f\x9f\xa3\xa9\xc9\xae\x37\xdc\x79\x50\xb5\xee\x40\xd2\x91\x2c\xb9\xe9\xba\x1b\x7e\xb8\x0b\xa4\x80\x14\xa5\x16\xc9\x82\xa2\x21\x50\x7c\x70\xbb\xdb\x65\xcf\x98\x37\x1f\x30\xed\x2d\x88\xb1\x99\xab\x34\x33\x6a\x81\x24\x51\x4d\x73\x2b\x96\xb6\xdb\x9d\xf5\x69\xc9\xd6\x6c\xd0\xbc\x4e\x90\x11\x92\x44\x37\x5e\x7d\xe3\x6f\xc7\x35\xf7\x0c\x15\x87\xeb\xad\x59\x6a\x03\x92\x19\x0a\x42\x8b\x20\x52\xf8\x5c\x79\x7a\xb5\xc3\x90\x6a\xde\x74\x68\xaf\x50\x1e\xa3\x09\xac\x99\x76\xd6\x6f\x42\xb2\xd6\x25\xc0\xdb\xd8\x24\xc1\x0d\x57\xdc\xec\xab\x4f\xdb\xc8\x92\x83\x20\x56\x77\xec\xab\x9a\x2f\xdd\xa4\xaa\x4e\x73\x5f\x82\xd4\xba\x28\x57\xbb\xd9\xde\x42\xbd\xc1\x6a\x3f\xab\x5a\x23\x6b\x99\x45\xa9\x9a\x6d\x51\xdd\x35\xfe\x08\x4d\x1d\x7c\xdc\xee\xd4\x01\xbe\xcc\x8e\xae\xad\x34\x70\xe5\xdd\x58\x53\xd0\x58\xf6\xe3\x96\xc7\xb2\x54\x95\x4a\x55\x48\xe0\xf8\x71\x8b\x81\xe3\x4f\xa9\xa5\x17\x8e\xf3\x47\x2e\xd4\x1a\x26\xc1\x28\x88\xb2\xd0\x1f\x3f\xb6\xd7\x52\x79\x93\x24\xbe\x0f\x47\x41\x92\x2b\xe7\xf8\xfb\x34\x09\x5a\xab\x8d\x3e\x19\xfb\xdf\x5e\xc7\xc9\x9d\x9f\xe5\xef\x3f\x87\xc1\x78\xf4\xf8\xde\x8f\xa2\x38\xf3\x73\xcd\xe6\xbf\xfb\xcf\xe3\xf7\x4c\xbe\xf8\xc9\x5d\x90\x1c\xf8\x93\x49\x3a\x8c\x47\xc1\xc1\x30\xbe\xfb\x9f\xe1\x78\x9a\x66\x41\xb2\xff\xf8\x35\xf9\x4f\xae\x56\x43\xf9\x67\xa3\x28\x15\xff\x64\xf1\x17\x3f\x96\x1f\x32\xfb\xae\x22\x0b\x8f\x5f\x93\x2b\x35\xba\x1f\xc6\xd1\xe7\xf0\x66\x56\xc9\x7f\x7f\x78\x7f\x76\x7d\x75\x76\x79\x7c\x79\x75\x7d\x71\xba\xf2\x01\xf9\x2f\xc5\x49\x4e\x5e\xcb\xcf\x5b\xe2\x3a\x0b\x22\x3f\xca\xae\xc3\x51\x51\xe8\xcf\x74\xce\xf2\xfc\xb5\xf8\x13\x63\xff\x53\x30\xfb\xce\xab\xd9\x6b\xe7\x42\xf8\xeb\x30\x9a\x4c\xb3\xf9\x9f\xff\x9d\xb5\x96\x6f\x7e\xec\xc1\xdf\x3e\xf8\xf0\x6a\x70\xf2\xfe\xe2\xb7\xab\x8b\x77\x97\x25\x35\x48\xa7\x9f\x96\xdd\x4f\x5b\x8f\x55\x21\x6d\x6d\x06\x2b\x42\x35\xd4\xe9\xe4\xd7\x8b\xb3\x52\x7d\x0c\xc7\x61\xb0\x46\x1f\xf3\xd7\xda\x1a\x9c\xcc\x5e\xd7\xf7\xed\x83\xb3\x93\xf7\x67\x57\xc0\xf7\xa7\xc1\x30\x09\xb2\x75\x75\x18\x28\x24\xc4\x7a\xa8\x64\x96\x75\x99\xf8\x69\xfa\x35\x4e\x46\x2b\xf5\x59\x6b\xc2\x25\x2b\x30\xc8\xe2\xc4\xbf\xa9\xcd\x18\xa4\xf3\x9f\xaf\xa3\x67\x0f\xae\xde\xbd\x3f\x3e\x3f\xbb\x3e\x3e\x39\x79\xf7\xe1\x72\xad\x3e\x16\x5f\x71\xed\x0f\x87\xf1\x34\xd2\x68\x44\xf9\x72\xa9\x8c\x59\x63\x39\x8b\xd6\x72\x8e\x55\xb2\x1b\xe8\xf0\x8b\x2a\xbd\x3d\xfb\x17\x52\x9d\xdb\xe0\x9b\xba\x2a\xd2\x8b\xf5\xd5\x70\xde\x8a\xf2\x38\x5f\x4b\xe7\x73\x3b\xfd\x14\x24\x51\x90\x05\x0a\xdf\x73\x1f\x24\xe9\x22\x2e\x68\x1f\x78\x07\x87\x8f\x34\x05\xd1\xbd\x80\xd1\x28\xb8\x6f\xbd\x74\xb2\x64\x1a\xac\x7a\x8c\x24\x1e\xc9\x4f\xff\xf2\x17\xcf\x5e\xac\x7e\xda\xec\x93\x5e\xfc\xf8\x6f\x00\x00\x00\xff\xff\xc4\x89\x0a\x1d\x5a\xae\x01\x00")

func cloudJsonBytes() ([]byte, error) {
	return bindataRead(
		_cloudJson,
		"cloud.json",
	)
}

func cloudJson() (*asset, error) {
	bytes, err := cloudJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.json", size: 110170, mode: os.FileMode(420), modTime: time.Unix(1453795200, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cloud.json": cloudJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cloud.json": {cloudJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
