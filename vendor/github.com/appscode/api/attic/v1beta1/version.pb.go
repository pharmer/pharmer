// Code generated by protoc-gen-go. DO NOT EDIT.
// source: version.proto

package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VersionListRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *VersionListRequest) Reset()                    { *m = VersionListRequest{} }
func (m *VersionListRequest) String() string            { return proto.CompactTextString(m) }
func (*VersionListRequest) ProtoMessage()               {}
func (*VersionListRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *VersionListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VersionListRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type VersionListResponse struct {
	Versions []*ArtifactVersion `protobuf:"bytes,1,rep,name=versions" json:"versions,omitempty"`
}

func (m *VersionListResponse) Reset()                    { *m = VersionListResponse{} }
func (m *VersionListResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionListResponse) ProtoMessage()               {}
func (*VersionListResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *VersionListResponse) GetVersions() []*ArtifactVersion {
	if m != nil {
		return m.Versions
	}
	return nil
}

type VersionDescribeRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *VersionDescribeRequest) Reset()                    { *m = VersionDescribeRequest{} }
func (m *VersionDescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*VersionDescribeRequest) ProtoMessage()               {}
func (*VersionDescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *VersionDescribeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VersionDescribeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VersionDescribeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type VersionDescribeResponse struct {
	Version *ArtifactVersion `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *VersionDescribeResponse) Reset()                    { *m = VersionDescribeResponse{} }
func (m *VersionDescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionDescribeResponse) ProtoMessage()               {}
func (*VersionDescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *VersionDescribeResponse) GetVersion() *ArtifactVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type ArtifactVersion struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	ModifiedAt int64  `protobuf:"varint,4,opt,name=modified_at,json=modifiedAt" json:"modified_at,omitempty"`
	Type       string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	// Types that are valid to be assigned to Specs:
	//	*ArtifactVersion_Java
	//	*ArtifactVersion_Docker
	//	*ArtifactVersion_Php
	//	*ArtifactVersion_Npm
	Specs isArtifactVersion_Specs `protobuf_oneof:"specs"`
}

func (m *ArtifactVersion) Reset()                    { *m = ArtifactVersion{} }
func (m *ArtifactVersion) String() string            { return proto.CompactTextString(m) }
func (*ArtifactVersion) ProtoMessage()               {}
func (*ArtifactVersion) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type isArtifactVersion_Specs interface {
	isArtifactVersion_Specs()
}

type ArtifactVersion_Java struct {
	Java *JavaSpec `protobuf:"bytes,6,opt,name=java,oneof"`
}
type ArtifactVersion_Docker struct {
	Docker *DockerSpec `protobuf:"bytes,7,opt,name=docker,oneof"`
}
type ArtifactVersion_Php struct {
	Php *PhpSpec `protobuf:"bytes,8,opt,name=php,oneof"`
}
type ArtifactVersion_Npm struct {
	Npm *NpmSpec `protobuf:"bytes,9,opt,name=npm,oneof"`
}

func (*ArtifactVersion_Java) isArtifactVersion_Specs()   {}
func (*ArtifactVersion_Docker) isArtifactVersion_Specs() {}
func (*ArtifactVersion_Php) isArtifactVersion_Specs()    {}
func (*ArtifactVersion_Npm) isArtifactVersion_Specs()    {}

func (m *ArtifactVersion) GetSpecs() isArtifactVersion_Specs {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *ArtifactVersion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ArtifactVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ArtifactVersion) GetModifiedAt() int64 {
	if m != nil {
		return m.ModifiedAt
	}
	return 0
}

func (m *ArtifactVersion) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ArtifactVersion) GetJava() *JavaSpec {
	if x, ok := m.GetSpecs().(*ArtifactVersion_Java); ok {
		return x.Java
	}
	return nil
}

func (m *ArtifactVersion) GetDocker() *DockerSpec {
	if x, ok := m.GetSpecs().(*ArtifactVersion_Docker); ok {
		return x.Docker
	}
	return nil
}

func (m *ArtifactVersion) GetPhp() *PhpSpec {
	if x, ok := m.GetSpecs().(*ArtifactVersion_Php); ok {
		return x.Php
	}
	return nil
}

func (m *ArtifactVersion) GetNpm() *NpmSpec {
	if x, ok := m.GetSpecs().(*ArtifactVersion_Npm); ok {
		return x.Npm
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ArtifactVersion) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ArtifactVersion_OneofMarshaler, _ArtifactVersion_OneofUnmarshaler, _ArtifactVersion_OneofSizer, []interface{}{
		(*ArtifactVersion_Java)(nil),
		(*ArtifactVersion_Docker)(nil),
		(*ArtifactVersion_Php)(nil),
		(*ArtifactVersion_Npm)(nil),
	}
}

func _ArtifactVersion_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ArtifactVersion)
	// specs
	switch x := m.Specs.(type) {
	case *ArtifactVersion_Java:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Java); err != nil {
			return err
		}
	case *ArtifactVersion_Docker:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Docker); err != nil {
			return err
		}
	case *ArtifactVersion_Php:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Php); err != nil {
			return err
		}
	case *ArtifactVersion_Npm:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Npm); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ArtifactVersion.Specs has unexpected type %T", x)
	}
	return nil
}

func _ArtifactVersion_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ArtifactVersion)
	switch tag {
	case 6: // specs.java
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JavaSpec)
		err := b.DecodeMessage(msg)
		m.Specs = &ArtifactVersion_Java{msg}
		return true, err
	case 7: // specs.docker
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DockerSpec)
		err := b.DecodeMessage(msg)
		m.Specs = &ArtifactVersion_Docker{msg}
		return true, err
	case 8: // specs.php
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PhpSpec)
		err := b.DecodeMessage(msg)
		m.Specs = &ArtifactVersion_Php{msg}
		return true, err
	case 9: // specs.npm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NpmSpec)
		err := b.DecodeMessage(msg)
		m.Specs = &ArtifactVersion_Npm{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ArtifactVersion_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ArtifactVersion)
	// specs
	switch x := m.Specs.(type) {
	case *ArtifactVersion_Java:
		s := proto.Size(x.Java)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactVersion_Docker:
		s := proto.Size(x.Docker)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactVersion_Php:
		s := proto.Size(x.Php)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactVersion_Npm:
		s := proto.Size(x.Npm)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type JavaSpec struct {
	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	ArtifactId  string `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId" json:"artifact_id,omitempty"`
	ArtifactUrl string `protobuf:"bytes,3,opt,name=artifact_url,json=artifactUrl" json:"artifact_url,omitempty"`
}

func (m *JavaSpec) Reset()                    { *m = JavaSpec{} }
func (m *JavaSpec) String() string            { return proto.CompactTextString(m) }
func (*JavaSpec) ProtoMessage()               {}
func (*JavaSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *JavaSpec) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *JavaSpec) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *JavaSpec) GetArtifactUrl() string {
	if m != nil {
		return m.ArtifactUrl
	}
	return ""
}

type DockerSpec struct {
	TarSums     []string `protobuf:"bytes,1,rep,name=tar_sums,json=tarSums" json:"tar_sums,omitempty"`
	ManifestUrl string   `protobuf:"bytes,2,opt,name=manifest_url,json=manifestUrl" json:"manifest_url,omitempty"`
}

func (m *DockerSpec) Reset()                    { *m = DockerSpec{} }
func (m *DockerSpec) String() string            { return proto.CompactTextString(m) }
func (*DockerSpec) ProtoMessage()               {}
func (*DockerSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *DockerSpec) GetTarSums() []string {
	if m != nil {
		return m.TarSums
	}
	return nil
}

func (m *DockerSpec) GetManifestUrl() string {
	if m != nil {
		return m.ManifestUrl
	}
	return ""
}

type PhpSpec struct {
	DownloadUrl string `protobuf:"bytes,1,opt,name=download_url,json=downloadUrl" json:"download_url,omitempty"`
	Shasum      string `protobuf:"bytes,2,opt,name=shasum" json:"shasum,omitempty"`
}

func (m *PhpSpec) Reset()                    { *m = PhpSpec{} }
func (m *PhpSpec) String() string            { return proto.CompactTextString(m) }
func (*PhpSpec) ProtoMessage()               {}
func (*PhpSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *PhpSpec) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

func (m *PhpSpec) GetShasum() string {
	if m != nil {
		return m.Shasum
	}
	return ""
}

type NpmSpec struct {
	Description string   `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	ArtifactId  string   `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId" json:"artifact_id,omitempty"`
	Shasum      string   `protobuf:"bytes,3,opt,name=shasum" json:"shasum,omitempty"`
	Keywords    []string `protobuf:"bytes,4,rep,name=keywords" json:"keywords,omitempty"`
	ArtifactUrl string   `protobuf:"bytes,5,opt,name=artifact_url,json=artifactUrl" json:"artifact_url,omitempty"`
}

func (m *NpmSpec) Reset()                    { *m = NpmSpec{} }
func (m *NpmSpec) String() string            { return proto.CompactTextString(m) }
func (*NpmSpec) ProtoMessage()               {}
func (*NpmSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *NpmSpec) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NpmSpec) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *NpmSpec) GetShasum() string {
	if m != nil {
		return m.Shasum
	}
	return ""
}

func (m *NpmSpec) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *NpmSpec) GetArtifactUrl() string {
	if m != nil {
		return m.ArtifactUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionListRequest)(nil), "appscode.attic.v1beta1.VersionListRequest")
	proto.RegisterType((*VersionListResponse)(nil), "appscode.attic.v1beta1.VersionListResponse")
	proto.RegisterType((*VersionDescribeRequest)(nil), "appscode.attic.v1beta1.VersionDescribeRequest")
	proto.RegisterType((*VersionDescribeResponse)(nil), "appscode.attic.v1beta1.VersionDescribeResponse")
	proto.RegisterType((*ArtifactVersion)(nil), "appscode.attic.v1beta1.ArtifactVersion")
	proto.RegisterType((*JavaSpec)(nil), "appscode.attic.v1beta1.JavaSpec")
	proto.RegisterType((*DockerSpec)(nil), "appscode.attic.v1beta1.DockerSpec")
	proto.RegisterType((*PhpSpec)(nil), "appscode.attic.v1beta1.PhpSpec")
	proto.RegisterType((*NpmSpec)(nil), "appscode.attic.v1beta1.NpmSpec")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Versions service

type VersionsClient interface {
	List(ctx context.Context, in *VersionListRequest, opts ...grpc.CallOption) (*VersionListResponse, error)
	Describe(ctx context.Context, in *VersionDescribeRequest, opts ...grpc.CallOption) (*VersionDescribeResponse, error)
}

type versionsClient struct {
	cc *grpc.ClientConn
}

func NewVersionsClient(cc *grpc.ClientConn) VersionsClient {
	return &versionsClient{cc}
}

func (c *versionsClient) List(ctx context.Context, in *VersionListRequest, opts ...grpc.CallOption) (*VersionListResponse, error) {
	out := new(VersionListResponse)
	err := grpc.Invoke(ctx, "/appscode.attic.v1beta1.Versions/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionsClient) Describe(ctx context.Context, in *VersionDescribeRequest, opts ...grpc.CallOption) (*VersionDescribeResponse, error) {
	out := new(VersionDescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.attic.v1beta1.Versions/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Versions service

type VersionsServer interface {
	List(context.Context, *VersionListRequest) (*VersionListResponse, error)
	Describe(context.Context, *VersionDescribeRequest) (*VersionDescribeResponse, error)
}

func RegisterVersionsServer(s *grpc.Server, srv VersionsServer) {
	s.RegisterService(&_Versions_serviceDesc, srv)
}

func _Versions_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.attic.v1beta1.Versions/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionsServer).List(ctx, req.(*VersionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Versions_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionsServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.attic.v1beta1.Versions/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionsServer).Describe(ctx, req.(*VersionDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Versions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.attic.v1beta1.Versions",
	HandlerType: (*VersionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Versions_List_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _Versions_Describe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "version.proto",
}

func init() { proto.RegisterFile("version.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0x41, 0x4f, 0x1b, 0x3b,
	0x10, 0xc7, 0xdf, 0x6e, 0x42, 0x76, 0x99, 0xf0, 0xde, 0x93, 0xfc, 0x24, 0xde, 0x36, 0xaa, 0x20,
	0xdd, 0x4b, 0x51, 0x2b, 0x65, 0x05, 0x48, 0x95, 0xaa, 0x52, 0xa9, 0xa4, 0x1c, 0x0a, 0xaa, 0x50,
	0x14, 0x44, 0x0f, 0xa8, 0x52, 0x64, 0x76, 0x0d, 0x18, 0xb2, 0x6b, 0x77, 0xed, 0x04, 0x21, 0xc4,
	0x85, 0xaf, 0xd0, 0x8f, 0xd0, 0x5b, 0xef, 0x3d, 0xf5, 0x63, 0xf4, 0x2b, 0xf4, 0xda, 0x63, 0xef,
	0x95, 0xbd, 0xf6, 0x26, 0x10, 0x02, 0xb4, 0xb7, 0xf5, 0x78, 0xfe, 0x33, 0xbf, 0x19, 0xdb, 0xb3,
	0xf0, 0xf7, 0x90, 0xe4, 0x82, 0xb2, 0xac, 0xc5, 0x73, 0x26, 0x19, 0x9a, 0xc7, 0x9c, 0x8b, 0x98,
	0x25, 0xa4, 0x85, 0xa5, 0xa4, 0x71, 0x6b, 0xb8, 0xbc, 0x4f, 0x24, 0x5e, 0x6e, 0x3c, 0x3c, 0x64,
	0xec, 0xb0, 0x4f, 0x22, 0xcc, 0x69, 0x84, 0xb3, 0x8c, 0x49, 0x2c, 0x29, 0xcb, 0x44, 0xa1, 0x6a,
	0x2c, 0x58, 0xd5, 0xcd, 0xfb, 0xe1, 0x1a, 0xa0, 0x77, 0x45, 0x9a, 0xb7, 0x54, 0xc8, 0x2e, 0xf9,
	0x30, 0x20, 0x42, 0x22, 0x04, 0xd5, 0x0c, 0xa7, 0x24, 0x70, 0x9a, 0xce, 0xd2, 0x6c, 0x57, 0x7f,
	0x2b, 0x9b, 0x3c, 0xe3, 0x24, 0x70, 0x0b, 0x9b, 0xfa, 0x0e, 0xf7, 0xe0, 0xbf, 0x2b, 0x6a, 0xc1,
	0x59, 0x26, 0x08, 0x7a, 0x0d, 0xbe, 0x61, 0x17, 0x81, 0xd3, 0xac, 0x2c, 0xd5, 0x57, 0x1e, 0xb7,
	0x6e, 0xa6, 0x6f, 0xad, 0xe7, 0x92, 0x1e, 0xe0, 0x58, 0x9a, 0x30, 0xdd, 0x52, 0x18, 0x76, 0x60,
	0xde, 0x18, 0x37, 0x88, 0x88, 0x73, 0xba, 0x4f, 0x6e, 0xa3, 0xfb, 0x07, 0x5c, 0x9a, 0x18, 0x36,
	0x97, 0x26, 0x25, 0x6d, 0x65, 0x8c, 0xf6, 0x3d, 0xfc, 0x3f, 0x11, 0xd1, 0x10, 0xaf, 0x83, 0x67,
	0x12, 0xeb, 0xa8, 0xbf, 0x01, 0x6c, 0x75, 0xe1, 0x0f, 0x17, 0xfe, 0xbd, 0xb6, 0x69, 0xa8, 0x9c,
	0x71, 0x2a, 0x4d, 0xee, 0x8e, 0x91, 0x07, 0xa3, 0xd4, 0x05, 0xac, 0x5d, 0xa2, 0x45, 0xa8, 0xa7,
	0x2c, 0xa1, 0x07, 0x94, 0x24, 0x3d, 0x2c, 0x83, 0x6a, 0xd3, 0x59, 0xaa, 0x74, 0xc1, 0x9a, 0xd6,
	0x65, 0x59, 0xe4, 0xcc, 0xa8, 0x48, 0xf4, 0x0c, 0xaa, 0xc7, 0x78, 0x88, 0x83, 0x9a, 0x2e, 0xa3,
	0x39, 0xad, 0x8c, 0x2d, 0x3c, 0xc4, 0x3b, 0x9c, 0xc4, 0x6f, 0xfe, 0xea, 0x6a, 0x7f, 0xb4, 0x06,
	0xb5, 0x84, 0xc5, 0x27, 0x24, 0x0f, 0x3c, 0xad, 0x0c, 0xa7, 0x29, 0x37, 0xb4, 0x97, 0xd1, 0x1a,
	0x0d, 0x5a, 0x85, 0x0a, 0x3f, 0xe2, 0x81, 0xaf, 0xa5, 0x8b, 0xd3, 0xa4, 0x9d, 0x23, 0x6e, 0x74,
	0xca, 0x5b, 0x89, 0x32, 0x9e, 0x06, 0xb3, 0xb7, 0x8b, 0xb6, 0x79, 0x6a, 0x45, 0x19, 0x4f, 0xdb,
	0x1e, 0xcc, 0x08, 0x4e, 0x62, 0x11, 0x52, 0xf0, 0x6d, 0x11, 0xe8, 0x01, 0xf8, 0x87, 0x39, 0x1b,
	0xf0, 0x5e, 0xd9, 0x6d, 0x4f, 0xaf, 0x37, 0x13, 0xd5, 0x44, 0x6c, 0x4e, 0xa5, 0x57, 0xde, 0x10,
	0xb0, 0xa6, 0xcd, 0x04, 0x3d, 0x82, 0xb9, 0xd2, 0x61, 0x90, 0xf7, 0xcd, 0x21, 0x94, 0xa2, 0xdd,
	0xbc, 0x1f, 0x6e, 0x01, 0x8c, 0xaa, 0x56, 0xc9, 0x24, 0xce, 0x7b, 0x62, 0x90, 0x16, 0xb7, 0x7b,
	0xb6, 0xeb, 0x49, 0x9c, 0xef, 0x0c, 0x52, 0xa1, 0x62, 0xa5, 0x38, 0xa3, 0x07, 0x44, 0x14, 0xb1,
	0x8a, 0x6c, 0x75, 0x6b, 0x53, 0xb1, 0x36, 0xc0, 0x33, 0x6d, 0x50, 0xde, 0x09, 0x3b, 0xcd, 0xfa,
	0x0c, 0x27, 0xda, 0xbb, 0x20, 0xaf, 0x5b, 0xdb, 0x6e, 0xde, 0x47, 0xf3, 0x50, 0x13, 0x47, 0x58,
	0x0c, 0x52, 0x13, 0xca, 0xac, 0xc2, 0x4f, 0x0e, 0x78, 0xa6, 0x31, 0xa8, 0x09, 0xf5, 0x44, 0xdf,
	0x67, 0x2e, 0xed, 0xfd, 0x55, 0x51, 0x46, 0xa6, 0xbb, 0x7b, 0x30, 0x4a, 0x53, 0x19, 0x4f, 0x83,
	0x1a, 0xe0, 0x9f, 0x90, 0xb3, 0x53, 0x96, 0x27, 0x22, 0xa8, 0xea, 0x52, 0xcb, 0xf5, 0x44, 0xdf,
	0x66, 0x26, 0xfa, 0xb6, 0xf2, 0xd3, 0x05, 0xdf, 0x3c, 0x05, 0x81, 0x3e, 0x3b, 0x50, 0x55, 0x53,
	0x02, 0x3d, 0x99, 0x76, 0xd2, 0x93, 0x83, 0xa8, 0xf1, 0xf4, 0x5e, 0xbe, 0xc5, 0x23, 0x0e, 0x37,
	0x2f, 0xbf, 0x04, 0xae, 0xef, 0x5c, 0x7e, 0xfb, 0xfe, 0xd1, 0x7d, 0x89, 0x5e, 0x44, 0xbd, 0xab,
	0xb3, 0x4f, 0xe9, 0x23, 0xa3, 0x8f, 0x2c, 0xa6, 0x88, 0xce, 0xd5, 0xb3, 0xb9, 0x88, 0xec, 0xdc,
	0x89, 0x8e, 0x05, 0xcb, 0xd0, 0x57, 0x07, 0x7c, 0x3b, 0x24, 0x50, 0xeb, 0x0e, 0x88, 0x6b, 0xf3,
	0xa9, 0x11, 0xdd, 0xdb, 0xdf, 0x80, 0x6f, 0x8f, 0x81, 0xb7, 0xd1, 0xab, 0x3f, 0x04, 0x3f, 0xa7,
	0xc9, 0x85, 0xa6, 0x6f, 0x3f, 0x87, 0x85, 0x98, 0xa5, 0x63, 0x14, 0x9c, 0x5e, 0x25, 0x69, 0xcf,
	0x19, 0x94, 0x8e, 0xfa, 0x09, 0x74, 0x9c, 0x3d, 0xcf, 0x6c, 0xec, 0xd7, 0xf4, 0x6f, 0x61, 0xf5,
	0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xdd, 0x0d, 0x64, 0x7d, 0x06, 0x00, 0x00,
}
